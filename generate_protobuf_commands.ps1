$ProtocExe = "./libs/protobuf/out/compiler/protoc.exe"
$ProtobufFileExtension = ".proto"
$ProtobufFilePattern = "*$ProtobufFileExtension"

$RootSourceDir = "./menrva/app/src/main"
$ProtobufSourceDir = "$RootSourceDir/protobuf"
$CppOutputCommandDir = "$RootSourceDir/cpp/commands"
$CppOutputMessageDir = "$CppOutputCommandDir/messages"
$JavaSourceDir = "$RootSourceDir/java"
$JavaOutputCommandDir = "$JavaSourceDir/com/monkeystable/menrva/commands"
$JavaOutputMessageDir = "$JavaOutputCommandDir/messages"

$GeneratedFileHeader = @"
/* --------------------------Do not edit this file--------------------------
 * This file has been generated by the compile_protobuf_messages.ps1 script.
 * To regenerate this file re-execute compile_protobuf_messages.ps1
 */

"@
$TemplateCommandNameField = "<CommandName>"
$JavaCommandClassTemplateFile = "$ProtobufSourceDir/CommandClass.java.template"
$JavaCommandEnumTemplateFile = "$ProtobufSourceDir/CommandsEnum.java.template"
$JavaFileExtension = ".java"
$CommandEnumFileName = "MenrvaCommands"
$JavaCommandEnumFile = "$JavaOutputCommandDir/$CommandEnumFileName$JavaFileExtension"
$CommandClassFileSuffix = "_Command"

Write-Output "Removing Output Directories..."
#if (Test-Path $CppOutputCommandDir) {
#    Write-Output "Removing C++ Output Directory : $CppOutputCommandDir ..."
#    Remove-Item $CppOutputCommandDir -Force -Recurse
#}
if (Test-Path $JavaOutputCommandDir) {
    Write-Output "Removing Java Output Directory : $JavaOutputCommandDir ..."
    Remove-Item $JavaOutputCommandDir -Force -Recurse
}

#Write-Output "Creating C++ Output Directories..."
#New-Item -ItemType directory -Force -Path $CppOutputCommandDir
#New-Item -ItemType directory -Force -Path $CppOutputMessageDir
Write-Output "Creating Java Output Directories..."
New-Item -ItemType directory -Force -Path $JavaOutputCommandDir
New-Item -ItemType directory -Force -Path $JavaOutputMessageDir

Write-Output "Loading Java & C++ Template Files..."
$javaCommandClassTemplate = Get-Content -Path $JavaCommandClassTemplateFile
$javaCommandEnumTemplate = Get-Content -Path $JavaCommandEnumTemplateFile

Write-Output "Compiling Protobuf Message & Command Files..."
$javaCommandEnum = $javaCommandEnumTemplate
$protobufFiles = (Get-ChildItem -Path "$ProtobufSourceDir/$ProtobufFilePattern" -Recurse).FullName | Resolve-Path -Relative
foreach ($protoFile in $protobufFiles) {
  Write-Output "Initializing for Protobuf File : $protoFile"
  $commandName = (Split-Path $protoFile -Leaf).Replace($ProtobufFileExtension, "")
  $javaCommandFileName = $commandName + $CommandClassFileSuffix + $JavaFileExtension

  Write-Output "Compiling Protobuf File : $protoFile"
  . $ProtocExe `
    --proto_path="$ProtobufSourceDir" `
    --cpp_out="lite:$CppOutputMessageDir" `
    --java_out="lite:$JavaSourceDir" `
    "$protoFile"
  
  Write-Output "Generating Java Command File : $JavaOutputCommandDir/$javaCommandFileName"
  $javaCommandFile = $javaCommandClassTemplate.Replace($TemplateCommandNameField, $commandName)
  Out-File -Force -FilePath "$JavaOutputCommandDir/$javaCommandFileName" -InputObject $javaCommandFile -Encoding ASCII
  
  Write-Output "Adding Entry to Java Command Enum for : $commandName"
  $enumCommandNameReplacement = @"
$commandName,
    $TemplateCommandNameField
"@
  $javaCommandEnum = $javaCommandEnum.Replace($TemplateCommandNameField, $enumCommandNameReplacement)
}

Write-Output "Generating Java Command Enum File : $JavaCommandEnumFile"
$javaCommandEnum = (($javaCommandEnum -Split "`n") | ? {$_ -NotMatch "$TemplateCommandNameField"}) -Join "`n"
Out-File -Force -FilePath "$JavaCommandEnumFile" -InputObject $javaCommandEnum -Encoding ASCII

Write-Output "Successfully Generated Protobuf Message & Command Files!"
