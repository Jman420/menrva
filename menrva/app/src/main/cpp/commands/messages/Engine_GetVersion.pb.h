// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Engine_GetVersion.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Engine_5fGetVersion_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Engine_5fGetVersion_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Engine_5fGetVersion_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Engine_5fGetVersion_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace messages {
class Engine_GetVersion_Request;
class Engine_GetVersion_RequestDefaultTypeInternal;
extern Engine_GetVersion_RequestDefaultTypeInternal _Engine_GetVersion_Request_default_instance_;
class Engine_GetVersion_Response;
class Engine_GetVersion_ResponseDefaultTypeInternal;
extern Engine_GetVersion_ResponseDefaultTypeInternal _Engine_GetVersion_Response_default_instance_;
}  // namespace messages
PROTOBUF_NAMESPACE_OPEN
template<> ::messages::Engine_GetVersion_Request* Arena::CreateMaybeMessage<::messages::Engine_GetVersion_Request>(Arena*);
template<> ::messages::Engine_GetVersion_Response* Arena::CreateMaybeMessage<::messages::Engine_GetVersion_Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace messages {

// ===================================================================

class Engine_GetVersion_Request :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:messages.Engine_GetVersion_Request) */ {
 public:
  Engine_GetVersion_Request();
  virtual ~Engine_GetVersion_Request();

  Engine_GetVersion_Request(const Engine_GetVersion_Request& from);
  Engine_GetVersion_Request(Engine_GetVersion_Request&& from) noexcept
    : Engine_GetVersion_Request() {
    *this = ::std::move(from);
  }

  inline Engine_GetVersion_Request& operator=(const Engine_GetVersion_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline Engine_GetVersion_Request& operator=(Engine_GetVersion_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const Engine_GetVersion_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Engine_GetVersion_Request* internal_default_instance() {
    return reinterpret_cast<const Engine_GetVersion_Request*>(
               &_Engine_GetVersion_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Engine_GetVersion_Request* other);
  friend void swap(Engine_GetVersion_Request& a, Engine_GetVersion_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Engine_GetVersion_Request* New() const final {
    return CreateMaybeMessage<Engine_GetVersion_Request>(nullptr);
  }

  Engine_GetVersion_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Engine_GetVersion_Request>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const Engine_GetVersion_Request& from);
  void MergeFrom(const Engine_GetVersion_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Engine_GetVersion_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "messages.Engine_GetVersion_Request";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:messages.Engine_GetVersion_Request)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Engine_5fGetVersion_2eproto;
};
// -------------------------------------------------------------------

class Engine_GetVersion_Response :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:messages.Engine_GetVersion_Response) */ {
 public:
  Engine_GetVersion_Response();
  virtual ~Engine_GetVersion_Response();

  Engine_GetVersion_Response(const Engine_GetVersion_Response& from);
  Engine_GetVersion_Response(Engine_GetVersion_Response&& from) noexcept
    : Engine_GetVersion_Response() {
    *this = ::std::move(from);
  }

  inline Engine_GetVersion_Response& operator=(const Engine_GetVersion_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline Engine_GetVersion_Response& operator=(Engine_GetVersion_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const Engine_GetVersion_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Engine_GetVersion_Response* internal_default_instance() {
    return reinterpret_cast<const Engine_GetVersion_Response*>(
               &_Engine_GetVersion_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Engine_GetVersion_Response* other);
  friend void swap(Engine_GetVersion_Response& a, Engine_GetVersion_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Engine_GetVersion_Response* New() const final {
    return CreateMaybeMessage<Engine_GetVersion_Response>(nullptr);
  }

  Engine_GetVersion_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Engine_GetVersion_Response>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const Engine_GetVersion_Response& from);
  void MergeFrom(const Engine_GetVersion_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Engine_GetVersion_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "messages.Engine_GetVersion_Response";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 major = 1;
  void clear_major();
  static const int kMajorFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 major() const;
  void set_major(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 minor = 2;
  void clear_minor();
  static const int kMinorFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 minor() const;
  void set_minor(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 patch = 3;
  void clear_patch();
  static const int kPatchFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 patch() const;
  void set_patch(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:messages.Engine_GetVersion_Response)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 major_;
  ::PROTOBUF_NAMESPACE_ID::int32 minor_;
  ::PROTOBUF_NAMESPACE_ID::int32 patch_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Engine_5fGetVersion_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Engine_GetVersion_Request

// -------------------------------------------------------------------

// Engine_GetVersion_Response

// int32 major = 1;
inline void Engine_GetVersion_Response::clear_major() {
  major_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Engine_GetVersion_Response::major() const {
  // @@protoc_insertion_point(field_get:messages.Engine_GetVersion_Response.major)
  return major_;
}
inline void Engine_GetVersion_Response::set_major(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  major_ = value;
  // @@protoc_insertion_point(field_set:messages.Engine_GetVersion_Response.major)
}

// int32 minor = 2;
inline void Engine_GetVersion_Response::clear_minor() {
  minor_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Engine_GetVersion_Response::minor() const {
  // @@protoc_insertion_point(field_get:messages.Engine_GetVersion_Response.minor)
  return minor_;
}
inline void Engine_GetVersion_Response::set_minor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  minor_ = value;
  // @@protoc_insertion_point(field_set:messages.Engine_GetVersion_Response.minor)
}

// int32 patch = 3;
inline void Engine_GetVersion_Response::clear_patch() {
  patch_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Engine_GetVersion_Response::patch() const {
  // @@protoc_insertion_point(field_get:messages.Engine_GetVersion_Response.patch)
  return patch_;
}
inline void Engine_GetVersion_Response::set_patch(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  patch_ = value;
  // @@protoc_insertion_point(field_set:messages.Engine_GetVersion_Response.patch)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace messages

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Engine_5fGetVersion_2eproto
