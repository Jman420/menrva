// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Engine_GetVersion.proto

#include "Engine_GetVersion.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace messages {
class Engine_GetVersion_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Engine_GetVersion_Request> _instance;
} _Engine_GetVersion_Request_default_instance_;
class Engine_GetVersion_ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Engine_GetVersion_Response> _instance;
} _Engine_GetVersion_Response_default_instance_;
}  // namespace messages
static void InitDefaultsscc_info_Engine_GetVersion_Request_Engine_5fGetVersion_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_Engine_GetVersion_Request_default_instance_;
    new (ptr) ::messages::Engine_GetVersion_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::Engine_GetVersion_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Engine_GetVersion_Request_Engine_5fGetVersion_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Engine_GetVersion_Request_Engine_5fGetVersion_2eproto}, {}};

static void InitDefaultsscc_info_Engine_GetVersion_Response_Engine_5fGetVersion_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::messages::_Engine_GetVersion_Response_default_instance_;
    new (ptr) ::messages::Engine_GetVersion_Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::messages::Engine_GetVersion_Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Engine_GetVersion_Response_Engine_5fGetVersion_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Engine_GetVersion_Response_Engine_5fGetVersion_2eproto}, {}};

namespace messages {

// ===================================================================

void Engine_GetVersion_Request::InitAsDefaultInstance() {
}
class Engine_GetVersion_Request::_Internal {
 public:
};

Engine_GetVersion_Request::Engine_GetVersion_Request()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:messages.Engine_GetVersion_Request)
}
Engine_GetVersion_Request::Engine_GetVersion_Request(const Engine_GetVersion_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:messages.Engine_GetVersion_Request)
}

void Engine_GetVersion_Request::SharedCtor() {
}

Engine_GetVersion_Request::~Engine_GetVersion_Request() {
  // @@protoc_insertion_point(destructor:messages.Engine_GetVersion_Request)
  SharedDtor();
}

void Engine_GetVersion_Request::SharedDtor() {
}

void Engine_GetVersion_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Engine_GetVersion_Request& Engine_GetVersion_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Engine_GetVersion_Request_Engine_5fGetVersion_2eproto.base);
  return *internal_default_instance();
}


void Engine_GetVersion_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.Engine_GetVersion_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Engine_GetVersion_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Engine_GetVersion_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.Engine_GetVersion_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields().data(),
        static_cast<int>(_internal_metadata_.unknown_fields().size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.Engine_GetVersion_Request)
  return target;
}

size_t Engine_GetVersion_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.Engine_GetVersion_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields().size();
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Engine_GetVersion_Request::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const Engine_GetVersion_Request*>(
      &from));
}

void Engine_GetVersion_Request::MergeFrom(const Engine_GetVersion_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.Engine_GetVersion_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Engine_GetVersion_Request::CopyFrom(const Engine_GetVersion_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.Engine_GetVersion_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Engine_GetVersion_Request::IsInitialized() const {
  return true;
}

void Engine_GetVersion_Request::InternalSwap(Engine_GetVersion_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

std::string Engine_GetVersion_Request::GetTypeName() const {
  return "messages.Engine_GetVersion_Request";
}


// ===================================================================

void Engine_GetVersion_Response::InitAsDefaultInstance() {
}
class Engine_GetVersion_Response::_Internal {
 public:
};

Engine_GetVersion_Response::Engine_GetVersion_Response()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:messages.Engine_GetVersion_Response)
}
Engine_GetVersion_Response::Engine_GetVersion_Response(const Engine_GetVersion_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&patch_) -
    reinterpret_cast<char*>(&major_)) + sizeof(patch_));
  // @@protoc_insertion_point(copy_constructor:messages.Engine_GetVersion_Response)
}

void Engine_GetVersion_Response::SharedCtor() {
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&major_)) + sizeof(patch_));
}

Engine_GetVersion_Response::~Engine_GetVersion_Response() {
  // @@protoc_insertion_point(destructor:messages.Engine_GetVersion_Response)
  SharedDtor();
}

void Engine_GetVersion_Response::SharedDtor() {
}

void Engine_GetVersion_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Engine_GetVersion_Response& Engine_GetVersion_Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Engine_GetVersion_Response_Engine_5fGetVersion_2eproto.base);
  return *internal_default_instance();
}


void Engine_GetVersion_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.Engine_GetVersion_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&major_)) + sizeof(patch_));
  _internal_metadata_.Clear();
}

const char* Engine_GetVersion_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 major = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          major_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 minor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          minor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 patch = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          patch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Engine_GetVersion_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.Engine_GetVersion_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 major = 1;
  if (this->major() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_major(), target);
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_minor(), target);
  }

  // int32 patch = 3;
  if (this->patch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_patch(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(_internal_metadata_.unknown_fields().data(),
        static_cast<int>(_internal_metadata_.unknown_fields().size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.Engine_GetVersion_Response)
  return target;
}

size_t Engine_GetVersion_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.Engine_GetVersion_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 major = 1;
  if (this->major() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_major());
  }

  // int32 minor = 2;
  if (this->minor() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_minor());
  }

  // int32 patch = 3;
  if (this->patch() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_patch());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields().size();
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Engine_GetVersion_Response::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const Engine_GetVersion_Response*>(
      &from));
}

void Engine_GetVersion_Response::MergeFrom(const Engine_GetVersion_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:messages.Engine_GetVersion_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.major() != 0) {
    _internal_set_major(from._internal_major());
  }
  if (from.minor() != 0) {
    _internal_set_minor(from._internal_minor());
  }
  if (from.patch() != 0) {
    _internal_set_patch(from._internal_patch());
  }
}

void Engine_GetVersion_Response::CopyFrom(const Engine_GetVersion_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.Engine_GetVersion_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Engine_GetVersion_Response::IsInitialized() const {
  return true;
}

void Engine_GetVersion_Response::InternalSwap(Engine_GetVersion_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(major_, other->major_);
  swap(minor_, other->minor_);
  swap(patch_, other->patch_);
}

std::string Engine_GetVersion_Response::GetTypeName() const {
  return "messages.Engine_GetVersion_Response";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::messages::Engine_GetVersion_Request* Arena::CreateMaybeMessage< ::messages::Engine_GetVersion_Request >(Arena* arena) {
  return Arena::CreateInternal< ::messages::Engine_GetVersion_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::messages::Engine_GetVersion_Response* Arena::CreateMaybeMessage< ::messages::Engine_GetVersion_Response >(Arena* arena) {
  return Arena::CreateInternal< ::messages::Engine_GetVersion_Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
